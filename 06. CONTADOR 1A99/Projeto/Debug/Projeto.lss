
Projeto.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000274  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000200  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  00000274  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000775  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000690  00000000  00000000  00000a91  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000346  00000000  00000000  00001121  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00001468  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d1  00000000  00000000  000014d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000020a  00000000  00000000  000018a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001aab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__vector_16>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	5a 00       	.word	0x005a	; ????
  6a:	5d 00       	.word	0x005d	; ????
  6c:	60 00       	.word	0x0060	; ????
  6e:	63 00       	.word	0x0063	; ????
  70:	66 00       	.word	0x0066	; ????
  72:	69 00       	.word	0x0069	; ????
  74:	6c 00       	.word	0x006c	; ????
  76:	6f 00       	.word	0x006f	; ????
  78:	72 00       	.word	0x0072	; ????
  7a:	75 00       	.word	0x0075	; ????

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_clear_bss>:
  88:	21 e0       	ldi	r18, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a6 30       	cpi	r26, 0x06	; 6
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	0e 94 88 00 	call	0x110	; 0x110 <main>
  9c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <display7S>:
/************************************************************************/
/*                 DESCRIÇÃO 7SEGMENTOS                                 */
/************************************************************************/

void display7S(unsigned int numero){
	switch(numero){
  a4:	8a 30       	cpi	r24, 0x0A	; 10
  a6:	91 05       	cpc	r25, r1
  a8:	18 f5       	brcc	.+70     	; 0xf0 <display7S+0x4c>
  aa:	fc 01       	movw	r30, r24
  ac:	ec 5c       	subi	r30, 0xCC	; 204
  ae:	ff 4f       	sbci	r31, 0xFF	; 255
  b0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__tablejump2__>
		case 0:
		PORTD = 0b01111011;
  b4:	8b e7       	ldi	r24, 0x7B	; 123
  b6:	8b b9       	out	0x0b, r24	; 11
		break;
  b8:	08 95       	ret
		case 1:
		PORTD = 0b00001010;
  ba:	8a e0       	ldi	r24, 0x0A	; 10
  bc:	8b b9       	out	0x0b, r24	; 11
		break;
  be:	08 95       	ret
		case 2:
		PORTD = 0b10110011;
  c0:	83 eb       	ldi	r24, 0xB3	; 179
  c2:	8b b9       	out	0x0b, r24	; 11
		break;
  c4:	08 95       	ret
		case 3:
		PORTD = 0b10011011;
  c6:	8b e9       	ldi	r24, 0x9B	; 155
  c8:	8b b9       	out	0x0b, r24	; 11
		break;
  ca:	08 95       	ret
		case 4:
		PORTD = 0b11001010;
  cc:	8a ec       	ldi	r24, 0xCA	; 202
  ce:	8b b9       	out	0x0b, r24	; 11
		break;
  d0:	08 95       	ret
		case 5:
		PORTD = 0b11011001;
  d2:	89 ed       	ldi	r24, 0xD9	; 217
  d4:	8b b9       	out	0x0b, r24	; 11
		break;
  d6:	08 95       	ret
		case 6:
		PORTD = 0b11111001;
  d8:	89 ef       	ldi	r24, 0xF9	; 249
  da:	8b b9       	out	0x0b, r24	; 11
		break;
  dc:	08 95       	ret
		case 7:
		PORTD = 0b00001011;
  de:	8b e0       	ldi	r24, 0x0B	; 11
  e0:	8b b9       	out	0x0b, r24	; 11
		break;
  e2:	08 95       	ret
		case 8:
		PORTD = 0b11111011;
  e4:	8b ef       	ldi	r24, 0xFB	; 251
  e6:	8b b9       	out	0x0b, r24	; 11
		break;
  e8:	08 95       	ret
		case 9:
		PORTD = 0b11011011;
  ea:	8b ed       	ldi	r24, 0xDB	; 219
  ec:	8b b9       	out	0x0b, r24	; 11
		break;
  ee:	08 95       	ret
		default:
		PORTD |= (1<<PORTD7);
  f0:	5f 9a       	sbi	0x0b, 7	; 11
  f2:	08 95       	ret

000000f4 <setup_uc>:
		break;
	}
}

void setup_uc(void){
	DDRD = 0xFF;
  f4:	8f ef       	ldi	r24, 0xFF	; 255
  f6:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00;
  f8:	1b b8       	out	0x0b, r1	; 11
	
	DDRB = 0x03;
  fa:	83 e0       	ldi	r24, 0x03	; 3
  fc:	84 b9       	out	0x04, r24	; 4
	PORTB = 0x00;
  fe:	15 b8       	out	0x05, r1	; 5
	
	/* INTERRUPÇÂO TIMER */
	TCCR0A=0b00000000;
 100:	14 bc       	out	0x24, r1	; 36
	TCCR0B=0b00000101;
 102:	85 e0       	ldi	r24, 0x05	; 5
 104:	85 bd       	out	0x25, r24	; 37
	TIMSK0=0b00000001;
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	
	sei();
 10c:	78 94       	sei
 10e:	08 95       	ret

00000110 <main>:

int main(void){
	
    /* Replace with your application code */
	
	setup_uc();
 110:	0e 94 7a 00 	call	0xf4	; 0xf4 <setup_uc>
	controle = 1;
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <controle+0x1>
 11c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <controle>
	
    while(1){
		
		if(controle == 1){
 120:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <controle>
 124:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <controle+0x1>
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	d1 f7       	brne	.-12     	; 0x120 <main+0x10>
			controle = 0;
 12c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <controle+0x1>
 130:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <controle>
			display7S(digitoDisplayDireita);
 134:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 138:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 13c:	0e 94 52 00 	call	0xa4	; 0xa4 <display7S>
			PORTB |= (1<<PORTB0);
 140:	28 9a       	sbi	0x05, 0	; 5
			PORTB &= ~(1<<PORTB1);
 142:	29 98       	cbi	0x05, 1	; 5
 144:	80 e3       	ldi	r24, 0x30	; 48
 146:	95 e7       	ldi	r25, 0x75	; 117
 148:	01 97       	sbiw	r24, 0x01	; 1
			//DELAY: NA PRATICA NAO HA NECESSIDADE
			for(int i = 0; i < 30000; i++){
 14a:	f1 f7       	brne	.-4      	; 0x148 <main+0x38>
				
			}
			display7S(digitoDisplayEsquerda);
 14c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <digitoDisplayEsquerda>
 150:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <digitoDisplayEsquerda+0x1>
 154:	0e 94 52 00 	call	0xa4	; 0xa4 <display7S>
			PORTB &= ~(1<<PORTB0);
 158:	28 98       	cbi	0x05, 0	; 5
			PORTB |= (1<<PORTB1);
 15a:	29 9a       	sbi	0x05, 1	; 5
 15c:	80 e3       	ldi	r24, 0x30	; 48
 15e:	95 e7       	ldi	r25, 0x75	; 117
 160:	01 97       	sbiw	r24, 0x01	; 1
			//DELAY: NA PRATICA NAO HA NECESSIDADE
			for(int i = 0; i < 30000; i++){
 162:	f1 f7       	brne	.-4      	; 0x160 <main+0x50>
				
			}
			if((digitoDisplayDireita == 9) && (digitoDisplayEsquerda == 9)){
 164:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
 168:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <_edata+0x1>
 16c:	29 30       	cpi	r18, 0x09	; 9
 16e:	31 05       	cpc	r19, r1
 170:	81 f4       	brne	.+32     	; 0x192 <main+0x82>
 172:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <digitoDisplayEsquerda>
 176:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <digitoDisplayEsquerda+0x1>
 17a:	89 30       	cpi	r24, 0x09	; 9
 17c:	91 05       	cpc	r25, r1
 17e:	d9 f4       	brne	.+54     	; 0x1b6 <main+0xa6>
				digitoDisplayEsquerda = 0;
 180:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <digitoDisplayEsquerda+0x1>
 184:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <digitoDisplayEsquerda>
				digitoDisplayDireita = 0;
 188:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 18c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 190:	c7 cf       	rjmp	.-114    	; 0x120 <main+0x10>
			}else{
				if(digitoDisplayEsquerda == 9){
 192:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <digitoDisplayEsquerda>
 196:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <digitoDisplayEsquerda+0x1>
 19a:	89 30       	cpi	r24, 0x09	; 9
 19c:	91 05       	cpc	r25, r1
 19e:	59 f4       	brne	.+22     	; 0x1b6 <main+0xa6>
					digitoDisplayEsquerda = 0;
 1a0:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <digitoDisplayEsquerda+0x1>
 1a4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <digitoDisplayEsquerda>
					digitoDisplayDireita++;
 1a8:	2f 5f       	subi	r18, 0xFF	; 255
 1aa:	3f 4f       	sbci	r19, 0xFF	; 255
 1ac:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <_edata+0x1>
 1b0:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <_edata>
 1b4:	b5 cf       	rjmp	.-150    	; 0x120 <main+0x10>
				}else{
					digitoDisplayEsquerda++;
 1b6:	01 96       	adiw	r24, 0x01	; 1
 1b8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <digitoDisplayEsquerda+0x1>
 1bc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <digitoDisplayEsquerda>
 1c0:	af cf       	rjmp	.-162    	; 0x120 <main+0x10>

000001c2 <__vector_16>:
			}
		}
	}
}

ISR(TIMER0_OVF_vect){
 1c2:	1f 92       	push	r1
 1c4:	0f 92       	push	r0
 1c6:	0f b6       	in	r0, 0x3f	; 63
 1c8:	0f 92       	push	r0
 1ca:	11 24       	eor	r1, r1
 1cc:	8f 93       	push	r24
 1ce:	9f 93       	push	r25
	controle++;
 1d0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <controle>
 1d4:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <controle+0x1>
 1d8:	01 96       	adiw	r24, 0x01	; 1
 1da:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <controle+0x1>
 1de:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <controle>
 1e2:	9f 91       	pop	r25
 1e4:	8f 91       	pop	r24
 1e6:	0f 90       	pop	r0
 1e8:	0f be       	out	0x3f, r0	; 63
 1ea:	0f 90       	pop	r0
 1ec:	1f 90       	pop	r1
 1ee:	18 95       	reti

000001f0 <__tablejump2__>:
 1f0:	ee 0f       	add	r30, r30
 1f2:	ff 1f       	adc	r31, r31
 1f4:	05 90       	lpm	r0, Z+
 1f6:	f4 91       	lpm	r31, Z
 1f8:	e0 2d       	mov	r30, r0
 1fa:	09 94       	ijmp

000001fc <_exit>:
 1fc:	f8 94       	cli

000001fe <__stop_program>:
 1fe:	ff cf       	rjmp	.-2      	; 0x1fe <__stop_program>
